quando vc troca um objeto por outro (outro objetomock)


        BIBLIOTECA MOCK
from unittest.mock import mock
o mock server para testar por ex:
-quantas vezes o metodo é chamado
-quais parametros foram passados pro metodo

    MODULO COMO OBJETO - REDEFININDO FUNÇÕES IMPORTADAS COM MOCK
vc pode atribuir um Mock com um retorno predefinido( Mock(return_value=nomedevariavel) a um metodo de uma biblioteca
que é importada para para o modulo que vc esta importando no escopo atual de codigo.

    RETURN_VALUE DO MOCK
faz com quem seja retornado um valor expecifico ao executar um metodo
ex:pythontools/libpythonph/git_hubapi.py   pythontools/libpythonph/tests/test_spam/test_github_api.py
    AULA pyools>testes automaticos>injeção de dependencias>modulo como objeto

    resp_mock = Mock()
    resp_mock.json.return_value = {
        'login': 'renzo', 'id': 402714,
        'avatar_url': 'https://avatars.githubusercontent.com/u/402714?v=4'
    }
!   resp_mock.json()['avatar_url']

    git_hubapi.requests.get = Mock(return_value=resp_mock)
!   git_hubapi.requests.get()


----------------------------------------
    EX:

from unittest.mock import mock

mock = Mock()

mock.executar_metodo()  #retorna outro mock como resultado, grava como ocorreu a execução

mock.executar_metodo.assert_called_once_with()  #não vai dar erro, pois ele nao foi executado com nenhum parametro ainda

mock.executar_metodo.assert_called_once_with("pedro") #vai retornar erro, pois foi chamado sem nenhum parametro

-------------------------------------
Ex: pytools/libpythonph/spam/main.py    pytools/libpythonph/test/testspam/test_envio_para_base_de_usuario.py