o objetivo do pipenv é não precisar mais trabalhar com o pip e o virtualenv de forma separada. Ajudar na administração
dos arquivos com as nossas dependências(requiremments, requiremments-dev). Utiliza hashes para garantir a instalação
segura dos pacotes.

o pipenv ajuda na gestao de versoes fixas das dependencias, para ter um build deterministico, fazendo isso atravez do
arquivo de configuração "Pipfile.lock"

ajuda na gestao das dependecias pois agrupa as dependencias transitivas por dependecia de alto nivel


    INSTALAÇÃO E CONFIGURAÇÃO

pip install pipenv  : instale o pipenv

nano .bashrc  : edite a configuração para não criar a pasta do ambiente virtual na pasta unificada predefinida.
-adicione a linha: export PIPENV_VENV_IN_PROJECT=1
-source ~/.bashrc   :exportando a variavel de ambiente
-echo $PIPENV_VENV_IN_PROJECT  :teste se a variavel esta funcionando (vai retornar 1)

OBS: se o pipenv estiver pegando o python do sistema ao invez do python do pyenv adicione o caminho correto do python
para o PIPENV no .bashrc
-export PIPENV_PYTHON="/home/phsw/.pyenv/shims/python3.6"
ou (export PATH="/home/phsw/.pyenv/bin:$PATH")

    ARQUIVOS DO PIPENV

Pipfile
-tipo: é um arquivo de configuração "toml"

Pipfile.lock
-quarda as dependencias de forma deterministica e contem os hashes para segurança do download.

    INSTALAÇÃO DE DEPENDÊNCIAS

pipenv install nomedalib  : vai procurar no pypi e instalar na pasta .venv atual, adicionando tbm a lib no arquivo de
configuração "Pipfile" no campo [packages].
pipenv install 'requests<2.22.0' : instala dependencia pinada direto no "Pipfile"

pipenv install -d :  cria o .venv com as depedencias de "Pipfile" (recalcula versoes / build nao deterministico)
pipenv install -d flake8 pytest coverage pytest-cov pytest-mock

OBS: "pipenv install" recalcula o grafo de dependencias (modifica Pipfile e Pipfile.lock)

pipenv graph : verifica as dependencias de alto nivel e suas dependencias transitivas

pipenv uninstall -d pytest : desenstalando uma lib de desenvolvimento. Removendo do "Pipfile"


pipenv sync -d : instala dependencias de desenvolvimento do Pipfile.Lock (build deterministico)
pipenv sync -d : instala dependencias de produção do Pipfile.Lock (build deterministico)

    DELETAR DEPENDENCIAS TRANSITIVAS REMANECENTES DE UMA DEPENDENCIA DE ALTO NIVEL DELETADA

delete a venv  ".venv":  pipenv uninstall -d pytest
crie denovo a venv:  pipenv install -d :


    ATIVAR VIRTUALENV / PIP ENV SHELL

pipenv shell  > ativa venv
exit > desativa venv

OBS: vc pode rodar o pytest apos ativar a venv, por ex:
pytest

OBS: vc pode rodar apenas um comando na virtualenv, fechando a venv automaticamente apos isso
pipenv run pytest .



